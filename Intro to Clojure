--------------------------------------BINDINGS-------------------------------------------
form: output of your program
symbol: "resolving a symbol" is the act of binding variable names to values
let: used to bind values to names. allows you to define a PRIVATE variable
scope: when clojure attempts to resolve a symbol, the resolution will be carried out within the SCOPE of the symbol
  NOTE:
        - LEXICAL SCOPE: the compiler relies on the physical location of the symbol (word) in a program (sentence) to resolve them.
        - nested lets are possible
        - symbol resolution is carried out inside the let where the symbol is resolved
        - the inner let does not override the scope of the outer let. both remain valid.
        
def : allows you to define a PUBLIC variable that can be accessed anywhere
  (not often used because it allows for issues in security)


--------------------------------------FUNCTIONS-------------------------------------------
defn: allows you to define a function
